@model RepairHouse.Models.OrdenDiagnostico

@{
    ViewBag.Title = "Nuevo Registro";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>OrdenDiagnostico</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FechaEmision, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaEmision, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaEmision, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaResolucion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaResolucion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaResolucion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdSucursal, "IdSucursal", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdSucursal", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdSucursal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdEmpleado, "IdEmpleado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdEmpleado", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdEmpleado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdCliente, "IdCliente", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdCliente", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comentarios, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comentarios, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comentarios, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CantidadEquipos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CantidadEquipos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CantidadEquipos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrecioBruto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrecioBruto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrecioBruto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descuento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descuento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descuento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrecioNeto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrecioNeto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrecioNeto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdEstado, "IdEstado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdEstado", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdEstado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Facturado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Facturado)
                @Html.ValidationMessageFor(model => model.Facturado, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @Html.LabelFor(model => Model.OrdenDiagnosticoDetalle)
    @for (var i = 0; i < Model.OrdenDiagnosticoDetalle.Count; i++)
    {
        @Html.EditorFor(model => Model.OrdenDiagnosticoDetalle.ElementAt(i).IdEquipo)
        <input name="OrdenDiagnosticoDetalle.IdEquipo" value="@Model.OrdenDiagnosticoDetalle.ElementAt(i).IdEquipo" />
    }

    @*@Html.LabelFor(model => model.OrdenDiagnosticoDetalle)
        @foreach (var ordenDiagnosticoDetalle in Model.OrdenDiagnosticoDetalle)

        {
            @Html.EditorFor(modelItem => ordenDiagnosticoDetalle.IdEquipo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(modelItem => ordenDiagnosticoDetalle.IdEquipo)

        }*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" onclick="DoAjaxPostAndMore(this)" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function DoAjaxPostAndMore(btnClicked) {
            var $form = $(btnClicked).parents('form');
            console.log("A ENVIAR");

            console.log($form);
            console.log($form.serialize());

            return;
            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                    console.log("ERRORRRRRR");
                },
                success: function (response) {
                    //do something with response
                    console.log("TODO SALIO BIEN");

                }
            });

            return false;// if it's a link to prevent post

        }
    </script>
}
