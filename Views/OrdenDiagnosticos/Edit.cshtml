@model RepairHouse.Models.ViewsModels.OrdenDiagnosticoFormViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">

        <div class="col">

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.FechaEmision, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrdenDiagnostico.FechaEmision, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.FechaEmision, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.FechaResolucion, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrdenDiagnostico.FechaResolucion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.FechaResolucion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.IdSucursal, "Sucursal", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdSucursal", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.IdEmpleado, "Empleado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdEmpleado", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.IdEmpleado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.IdCliente, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdCliente", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.IdCliente, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="col">

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.Comentarios, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrdenDiagnostico.Comentarios, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.Comentarios, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.CantidadEquipos, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrdenDiagnostico.CantidadEquipos, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    <a href="#">Agregar equipo</a> <span class="mx-2">|</span>
                    <a href="#" data-toggle="modal" data-target=".bd-example-modal-lg">Equipos a diagnosticar</a>
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.CantidadEquipos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.PrecioBruto, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrdenDiagnostico.PrecioBruto, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.PrecioBruto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.Descuento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrdenDiagnostico.Descuento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.Descuento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrdenDiagnostico.PrecioNeto, htmlAttributes: new { @class = "control-label col-md" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrdenDiagnostico.PrecioNeto, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.OrdenDiagnostico.PrecioNeto, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.OrdenDiagnostico.IdEstado, "IdEstado", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IdEstado", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OrdenDiagnostico.IdEstado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OrdenDiagnostico.Facturado, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.OrdenDiagnostico.Facturado)
                            @Html.ValidationMessageFor(model => model.OrdenDiagnostico.Facturado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
        </div>
    </div>

    <hr />

    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
        Launch demo modal
    </button>

    <!-- Modal -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bd-example-modal-lg">Large modal</button>

    <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div id="app" class="col-lg-8 m-auto">
                    <h5>Equipos</h5>
                    <div v-for="equipo in equipos" class="card text-white bg-dark mb-3">
                        <div class="card-header">
                            Equipo: <b>{{equipo.Marca}} {{equipo.Modelo}}</b>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    Precio diagnostico: <b>$ {{equipo.PrecioDiagnostico}}</b>
                                </div>
                                <div class="col">
                                    <a href="#">Ficha Diagnostico</a>
                                </div>
                                <div class="col">
                                    <a href="#">Quitar</a>
                                </div>
                            </div>
                            <input type="number" name="EquiposId[0]" value="55" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr />

    

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Create" class="btn btn-default" onclick="DoAjaxPostAndMore(this)" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/vue"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js"></script>

    <script>

        var app = new Vue({
            el: '#app',
            data: {
                message: 'Hello Vue!',
                equipos: []
            },
            created() {
                console.log("created");

                var url = '@Url.Content("~/OrdenDiagnosticos/Editar")' + '?id=44';
                axios.get(url).then((data) => {
                    console.log(data);
                });

                $.get(url, function (data) {
                    console.log(data);
                }).fail(function (error) {
                    alert("Ocurrio un error en el servidor. Detalle del error: " + error);
                });


                var url = '@Url.Content("~/OrdenDiagnosticos/GetDetalle")';

                // los datos del formulario
                var parametros = { idOrden: 5 };

                $.post(url, parametros, function (data) {
                    console.log(data);
                    app.message = "KAKA";
                    app.equipos = data;
                    if (data == "true") {
                        document.location.href = '@Url.Content("~/")';
                    } else {
                        $('#alertaCredenciales').addClass('show');
                    }
                }).fail(function (error) {
                    alert("Ocurrio un error en el servidor. Detalle del error: " + error);
                });
            }
        })

        function DoAjaxPostAndMore(btnClicked) {
            var $form = $(btnClicked).parents('form');
            console.log("A ENVIAR");

            console.log($form.validate().form());
            if (!$form.validate().form()) {
                return;
            }


            console.log($form);
            console.log($form.serialize());
            //return false;
            alert("Anestida");
            console.log("SEGUIMOS----------------------------->")
            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                    console.log("ERRORRRRRR");
                },
                success: function (response) {
                    //do something with response
                    console.log("TODO SALIO BIEN");

                }
            });

            return false;// if it's a link to prevent post

        }
    </script>
}
